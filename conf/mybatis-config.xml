<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--
    1、mybatis可以使用来引入外部properties配置文件的内容
    resource：引入类路径下的资源
    url:引入网络路径或磁盘路径下的资源
    -->
    <properties resource="dbconfig.properties"></properties>



    <!--
    2、settings包含了很多重要的设置项
    <setting/>用来设置每一个设置项
    name：设置项名称
    value：设置项取值
    -->
    <settings>
        <setting name="mapUnderscoreToCamelCase" value="true"/>
    </settings>

    <!--
     3、typeAliases：别名处理器，可以为我们的java类型起别名，别名不区分大小写
        1) typaAlisa：为某个java类型起别名
            type:要起别名的类型全类名，默认别名就是类名小写：employee
            alisa:指定新的别名
        2) package:为某个包下的所有类批量起别名
             name:指定包名（为当前包及下面所有的后代包的每一个类都起一个默认别名（类名小写））
        3）批量情况下，可能会产生别名冲突，可以使用注解@Alisa在java类型中使用
     -->
    <typeAliases>
        <!--<typeAlias type="com.atguigu.mybatis.bean.Employee" alias="emp"/>-->
        <!--<package name="com.atguigu.mybatis.bean"/>-->
    </typeAliases>

    <!--
    4、environments：环境们，mybatis可以配置多种环境,default指定使用某种环境，可以达到快速切换
       environment：配置一个具体的环境信息，必须包含transactionManager和dataSource两个标签，
       id代表当前环境的唯一标识
            transactionManager：事务管理器
                type：事务管理器的类型，type=[JDBC(JdbcTransactionFactory)|MANAGED(ManagedTransactionFactory)]，
                    自定义事务管理器：实现TransactionFactory接口，type指定为全类名
                提示 如果你正在使用 Spring + MyBatis，则没有必要配置事务管理器，因为 Spring 模块会使用自带的管理器来覆盖前面的配置。
            dataSource：数据源
                type：数据源类型，mybatis为[UNPOOLED(UnpooledDataSourceFactory)
                                |POOLED(PooledDataSourceFactory)
                                |JNDI(JndiDataSourceFactory)];
                      自定义数据源类型：实现DataSourceFactory接口，type是全类名
    -->
    <environments default="development">
        <environment id="qa">
            <transactionManager type="JDBC"></transactionManager>
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
        <environment id="development">
            <transactionManager type="JDBC"/>
            <!-- 数据库连接池信息-->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>

    <!--
     5、databaseIdProvider:支持多数据厂商mysql、oracle等
            type = "DB_VENDOR":作用就是得到数据库厂商的标识（从驱动获得，getDatabaseProductName()），
                mybatis就能根据数据库厂商标识来执行不同的sql
                现有厂商标识：MySQL,Oracle，SQL Server，XXXX
     -->
    <databaseIdProvider type="DB_VENDOR">
        <property name="MySQL" value="mysql"/>
        <property name="Oracle" value="oracle"/>
        <property name="SQL Server" value="sqlserver"/>
    </databaseIdProvider>
    <!--
        我们编写的Mapper文件会注册到全局配置文件中（mybatis-config.xml）
        6、mappers：将sql映射注册到全局配置中
            mapper：注册一个sql映射
                1）注册xml配置文件
                resource: 引用类路径下的sql映射文件
                    mybatis/mapper/EmployeeMapper.xml
                url:引用网络路径下或者磁盘路径下的sql映射文件
                    file：///var/mappers/AutoMapper.xml
                2）注册接口：
                class：引用注册接口的全类名
                    条件：1)) 有sql映射文件，映射文件必须和接口同名，并且放在与接口同一目录下
                    注解：没有sql映射文件
                    推荐：比较重要的Dao接口我们写sql映射文件，
                          不重要，简单的Dao接口为了开发快速可以使用注解；
            package：批量注册
                有sql映射文件，映射文件必须和接口同名，并且放在与接口同一目录下
    -->
    <mappers>
        <!--<mapper resource="mybatis/mapper/EmployeeMapper.xml"/>-->
        <!--<mapper class="com.atguigu.mybatis.dao.EmployeeMapperAnnotation"/>-->
        <package name="com.atguigu.mybatis.dao"/>
    </mappers>
</configuration>