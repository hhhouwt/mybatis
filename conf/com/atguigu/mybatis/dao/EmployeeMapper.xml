<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.mybatis.dao.EmployeeMapper">
    <!--
    namespace：名称空间，指定为接口的全类名
    id：唯一标识
    resultType：返回值类型
    #{id}:从传递过来的参数中取出id值
    -->
    <select id="getEmpByMap" resultType="com.atguigu.mybatis.bean.Employee">
        select * from ${tableName} where id = ${id} and last_name = #{lastName}

    </select>
    <select id="getEmpByIdAndLastName" resultType="com.atguigu.mybatis.bean.Employee">
        select * from tbl_employee where id = #{id} and last_name = #{lastName}
    </select>

    <select id="getEmpById" resultType="com.atguigu.mybatis.bean.Employee"
    databaseId="mysql">
    select * from tbl_employee where id = #{id}
  </select>

    <select id="getEmpById" resultType="com.atguigu.mybatis.bean.Employee"
            databaseId="oracle">
    select employee_id as id, last_name as lastName, email from employees e where employee_id = #{id}
  </select>
    <!--
    1、parameterType：参数类型，可以忽略
    2、获取自增主键值
        mysql支持自增主键，自增主键的获取：mybatis也是利用statement.getGeneratedKeys();
        useGeneratedKeys="true":使用自增逐渐获取主键值策略
        keyProperty:指定对应的主键属性，也就是mybatis获取到主键值之后，将这个值封装给javaBean的哪个属性
    -->
    <insert id="addEmp" parameterType="com.atguigu.mybatis.bean.Employee"
            useGeneratedKeys="true"
            keyProperty="id"
    >
        insert into tbl_employee (last_name, email, gender)
        values (#{lastName}, #{email}, #{gender})
    </insert>

    <update id="updateEmp">
        update tbl_employee
        set last_name = #{lastName},
         email = #{email},
         gender = #{gender}
         where id = #{id}
    </update>

    <delete id="deleteEmp">
        delete  from tbl_employee where id = #{id}
    </delete>


</mapper>